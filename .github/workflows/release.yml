name: Build and Release own_build keyboard
on:
  # 手動実行
  workflow_dispatch:
  # タグ追加で実行
  push:
    tags:
      - release-*
jobs:
  # リリースページ作成
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Keyboard firmware ${{ github.ref }}
          # body: |
          #   - QMK Firmwareの最新ソースコードをマージ

  # QMKファームウェア作成
  make_firmware:
    runs-on: ubuntu-latest
    # QMKのコンテナでビルド
    container:
      image: docker://qmkfm/base_container:latest
    steps:
    # QMKリポジトリと使用するブランチを選択
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: marksard/qmk_firmware
        ref: own_build
        submodules: true

    # 指定したブランチに入れてあるmakeスクリプトを起動
    # via用hexファイルをmakeし個別にzip圧縮し./_releaseフォルダに置く
    - name: Make firmware
      run: |
        python3 -m pip install qmk
        chmod +x ./_release_own_build.sh
        ./_release_own_build.sh -via
        ./_release_own_build.sh -viapack

    # 指定したブランチに入れてあるファイルサイズチェック用スクリプトを起動
    - name: Hex file size check
      run: |
        ./_release_own_build.sh -hexcheck

    # このコンテナで作成したファイルを指定したフォルダごとアップロード
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: firmware
        path: ./_release

  # リリース作業
  release:
    # create_releaseとmake_firmwareのjobが完了していることを実行条件とする
    needs: [create_release, make_firmware]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        keyboards: [
          marksard_treadstone32_rev1_via, marksard_treadstone32_lite_via,
          marksard_treadstone48_rev1_via, marksard_treadstone48_rev2_via,
          marksard_leftover30_via, marksard_rhymestone_rev1_via,
          marksard_treadstone60_via]
    steps:
    # Upload artifactでアップロードしたファイルをダウンロード
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: firmware

    # リリースページへの登録
    - name: Upload a new release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # 上のcreate_releaseで自動生成されるupload_urlを指定
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        # 上のkeyboardsリストにあるぶんのファイルが登録される
        asset_path: ${{ matrix.keyboards }}.zip
        asset_name: ${{ matrix.keyboards }}.zip
        asset_content_type: application/zip
