name: Build Check after merge with own_build keyboard
# on:
#   push:
#     tags:
#       - merge-*

on:
  push:
    branches:
      - main

  # Runs on 10 minutes past every hour
  schedule:
    # Cron format:
    #         ┌───────────── minute (0 - 59)
    #         │ ┌───────────── hour (0 - 23)
    #         │ │ ┌───────────── day of the month (1 - 31)
    #         │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #         │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #         │ │ │ │ │
    #         * * * * *
    - cron:  '0 9 * * 1'

env:
  NAME: marksard(merge_action_bot)
  EMAIL: marksard@rocketmail.com
  REPO_FORK: https://github.com/qmk/qmk_firmware.git
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  merge_build:
    runs-on: ubuntu-latest
    container:
      image: docker://qmkfm/base_container:latest
    steps:
    - name: Checkout marksard/qmk_firmware:own_build
      uses: actions/checkout@v2
      with:
        repository: marksard/qmk_firmware
        ref: own_build
        submodules: true
    - name: Merge firmware
      run: |

        git config --global user.name ${NAME}
        git config --global user.email ${EMAIL}
        git config --global pull.rebase merges
        git pull --unshallow  # this option is very important, you would get
                              # complains about unrelated histories without it.
                              # (but actions/checkout@v2 can also be instructed
                              # to fetch all git depth right from the start)
        git remote add upstream ${REPO_FORK}        
        git fetch upstream
        git merge --no-edit upstream/master

    - name: Build firmware
      run: |
        chmod +x ./_release_own_build.sh
        ./_release_own_build.sh -release

    - name: Merge push
      env:
        ACCESS_TOKEN:  ${{ secrets.ACCESS_TOKEN }}
      run: |
        git push https://x-access-token:${ACCESS_TOKEN}@github.com/marksard/qmk_firmware.git own_build

    - name: Slack Notification on Success
      if: success()
      uses: rtCamp/action-slack-notify@v2.0.2
      env:
        SLACK_TITLE: Merge Success
        SLACK_COLOR: good
        SLACK_MESSAGE: 'Merge check has been succeeded. https://github.com/marksard/qmk_firmware_hex/actions'

    - name: Slack Notification on Failure
      uses: rtCamp/action-slack-notify@v2.0.2
      if: failure()
      env:
        SLACK_TITLE: Test Failure
        SLACK_COLOR: danger
        SLACK_MESSAGE: 'Merge check has been failed. Please check last log at github action. https://github.com/marksard/qmk_firmware_hex/actions'
